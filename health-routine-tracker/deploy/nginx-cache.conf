worker_processes  1;

events { worker_connections  1024; }

http {
  # Upstream to Gateway (Docker service name)
  upstream gateway_upstream { server gateway:8080; }
  # Upstream to Frontend (static SPA served by its own nginx)
  upstream frontend_upstream { server frontend:80; }

  # Cache storage (10MB index, 100MB data, 60s inactive purge)
  proxy_cache_path /var/cache/nginx/api levels=1:2 keys_zone=api_cache:10m max_size=100m inactive=60s use_temp_path=off;

  # Cache only GET, without Authorization, and only for /routines|/stats (with or without /api prefix)
  map $request_method $is_get { GET 1; default 0; }
  map $http_authorization $has_auth { "" 0; default 1; }
  map $request_uri $is_cache_path { ~^/(api/)?(routines|stats)/ 1; default 0; }
  # When is_get=1 & has_auth=0 & is_cache_path=1 => key "101" => bypass=0 (cache)
  map "$is_get$has_auth$is_cache_path" $cache_bypass { "101" 0; default 1; }

  server {
    listen 80;
    server_name _;

    # API via Gateway (with or without /api prefix)
    location ~ ^/(api/)?(routines|comments|likes|stats)(/|$) {
      # strip /api prefix when present
      if ($request_uri ~ ^/api/) { set $upstream_uri $request_uri; }
      proxy_pass http://gateway_upstream;
      proxy_http_version 1.1;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_connect_timeout 5s;
      proxy_read_timeout 60s;

      # Enable cache (bypass unless GET+no-Auth+allowed path)
      proxy_cache_bypass $cache_bypass;
      proxy_no_cache     $cache_bypass;
      proxy_cache        api_cache;
      proxy_cache_key    "$scheme://$host$request_uri";
      proxy_cache_valid  200 10s;
      # Ignore upstream cache-preventing headers for cacheable responses
      proxy_ignore_headers Cache-Control Expires Set-Cookie;
      # Do not forward Set-Cookie on cached responses
      proxy_hide_header   Set-Cookie;
      add_header X-Cache-Status $upstream_cache_status always;
    }

    # Everything else â†’ Frontend SPA
    location / {
      proxy_pass http://frontend_upstream;
      proxy_http_version 1.1;
      proxy_set_header Connection "";
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_connect_timeout 5s;
      proxy_read_timeout 60s;
    }
  }
}
